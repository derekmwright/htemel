// Code generated by htemel. DO NOT EDIT.
package html

import (
  "github.com/derekmwright/htemel"
  "io"
)

type SourceElement struct {
	children []htemel.Node
}

// Source creates a tag <source> instance and returns it for further modification.
// Any children passed will be nested within the tag.
//
// Spec Description: The source element allows authors to specify multiple alternative source sets for img elements or multiple alternative media resources for media elements. It does not represent anything on its own.
func Source(children ...htemel.Node) *SourceElement {
	node := &SourceElement{
		children: children,
	}

	return node
}

func SourceIf(condition bool, children ...htemel.Node) *SourceElement {
	if condition {
		return Source(children...)
	}

	return nil
}

func (e *SourceElement) Render(w io.Writer) error {
	if _, err := w.Write([]byte("<source")); err != nil {
		return err
	}

	// TODO: Attribute stuff here

	if _, err := w.Write([]byte(">")); err != nil {
		return err
	}

	for _, child := range e.children {
		if err := child.Render(w); err != nil {
			return err
		}
	}

	if _, err := w.Write([]byte("</source>")); err != nil {
		return err
	}

	return nil
}
